
--==-- ChatLinksMonitor2 Functionality Description --==--

Addon type: Library
Libraries used: Lib-EventsManager2

This embeddable addon is a library that allows for aggregation of chat links, to be
parsed by a client addon. It is intended for use by developers to increase efficiency by
sharing a single source of chat link dispatches.


Here is the API, for developers:

ChatLinksMonitor2 registers some custom events with EventsManager2 that it will dispatch whenever
it finds links in a chat message. The custom events are named thusly:
	ChatLinksMonitor2_<link type, capitalized>_LINKS_FOUND
These link types are supported: achievement, enchant, item, player, quest, spell. The arguments of the
event are thus:
	1 - Text of the chat message in which the links were found.
	2 - Array of indexes into the chat message where links begin. This can be traversed with ipairs() or
		the "for i = 1, #links, 1 do" construct, but it should NOT be traversed with pairs(), as doing so may
		access indexes from previous dispatches. The library does not parse links out of the message
		automatically because doing so would create a large number of new strings that may not be used
		if clients are looking at only a specific part of each link (such as the name). To parse a link, simply
		give a value from this array to string.find or string.match. For instance, to get the name:
		string.match(chatMessage, "%[.+%]", startingIndex). Do not maintain a reference to this array.
	3 - CHAT_MSG_* event from which the links were found.

minor, subminor = ChatLinksMonitor2.GetVersion()
	Returns the minor and subminor components of the currently running version of the addon. This is
	the 2 and 3, respectively, of a number like 1.2.3. This is useful if you are depending on the non-embedded
	version of the library.

To embed the library into your addon, place the Lib-ChatLinksMonitor2 directory into your addon's directory.
Then, add the line PATH\ChatLinksMonitor2.lua at the top of the file list in your .toc file, such as
Lib-ChatLinksMonitor2\ChatLinksMonitor2.lua. Be sure EventsManager2 is loaded before this.

To run the library non-embedded, require it by listing it in the RequiredDeps line of your .toc file. Then, tell
users to ensure that they always have the latest version installed. To check the running version from your
addon, call the API function ChatLinksMonitor2.GetVersion().
